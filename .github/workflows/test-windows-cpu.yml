name: Unit-tests on macOS CPU

on:
  pull_request:
  push:
    branches:
      - nightly
      - main
      - release/*
  workflow_dispatch:

jobs:
  tests:
    strategy:
      matrix:
        python_version: ["3.8", "3.9", "3.10"]
      fail-fast: false
    uses: pytorch/test-infra/.github/workflows/macos_job.yml@main
    with:
      runner: macos-12
      repository: pytorch/vision
      script: |
        conda search gcc
#        echo '::group::Set PyTorch conda channel'
#        # TODO: Can we maybe have this as environment variable in the job template? For example, `IS_RELEASE`.
#        if [[ (${GITHUB_EVENT_NAME} = 'pull_request' && (${GITHUB_BASE_REF} = 'release'*)) || (${GITHUB_REF} = 'refs/heads/release'*) ]]; then
#          POSTFIX=test
#        else
#          POSTFIX=nightly
#        fi
#        PYTORCH_CHANNEL=pytorch-"${POSTFIX}"
#        echo "${PYTORCH_CHANNEL}"
#        echo '::endgroup::'
#
#        echo '::group::Set PyTorch conda mutex'
#        PYTORCH_MUTEX=cpuonly
#        echo "${PYTORCH_MUTEX}"
#        echo '::endgroup::'
#
#        echo '::group::Create conda environment'
#        conda create \
#          --name ci \
#          --quiet --yes \
#          python=${{ matrix.python-version }} pip \
#          clang_osx-64 clangxx_osx-64 \
#          setuptools ninja \
#          libpng jpeg
#        conda activate ci
#        pip install 'av<10'
#        echo '::endgroup::'
#
#        echo '::group::Install PyTorch'
#        conda install \
#          --quiet --yes \
#          -c "${PYTORCH_CHANNEL}" \
#          -c nvidia \
#          pytorch \
#          "${PYTORCH_MUTEX}"
#        echo '::endgroup::'
#
#        echo '::group::Install TorchVision'
#        python setup.py develop
#        echo '::endgroup::'
#
#        echo '::group::Collect PyTorch environment information'
#        python -m torch.utils.collect_env
#        echo '::endgroup::'
#
#        echo '::group::Install testing utilities'
#        pip install --progress-bar=off pytest pytest-mock pytest-cov
#        echo '::endgroup::'
#
#        echo '::group::Run tests'
#        pytest --durations=25
#        echo '::endgroup::'
