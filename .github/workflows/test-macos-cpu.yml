name: Unit-tests on Macos CPU

on:
  pull_request:
  push:
    branches:
      - nightly
      - main
      - release/*
  workflow_dispatch:

env:
  CHANNEL: "nightly"

jobs:
  tests:
    strategy:
      matrix:
        python_version: ["3.7", "3.8", "3.9", "3.10"]
      fail-fast: false
    uses: pytorch/test-infra/.github/workflows/macos_job.yml@main
    with:
      runner: macos-12
      repository: pytorch/vision
      timeout: 60
      script: |
        # Mark Build Directory Safe
        git config --global --add safe.directory /__w/vision/vision

        # Set up Environment Variables
        export PYTHON_VERSION="${{ matrix.python_version }}"
        export VERSION="cpu"
        export CUDATOOLKIT="cpuonly"

        # Set CHANNEL
        if [[ (${GITHUB_EVENT_NAME} = 'pull_request' && (${GITHUB_BASE_REF} = 'release'*)) || (${GITHUB_REF} = 'refs/heads/release'*) ]]; then
          export CHANNEL=test
        else
          export CHANNEL=nightly
        fi

        # Create Conda Env
        conda create -yp ./ci_env python="${PYTHON_VERSION}" numpy libpng jpeg scipy
        conda activate ./ci_env

        # FFMPEG and Conda Dependencies
        FFMPEG_PIN="=4.2"
        if [[ "${PYTHON_VERSION}" = "3.9" ]]; then
            FFMPEG_PIN=">=4.2"
        fi

        conda install -y -c pytorch "ffmpeg${FFMPEG_PIN}"
        conda env update --file "$.circleci/unittest/linux/scripts/environment.yml" --prune
        
        # Install PyTorch, Torchvision, and testing libraries
        set -ex
        conda install \
          --yes \
          -c "pytorch-${CHANNEL}" \
          "pytorch-${CHANNEL}"::pytorch \
          "${CUDATOOLKIT}"
        python3 setup.py develop
        python3 -m pip install pytest pytest-mock 'av<10'

        # Run Tests
        python3 -m torch.utils.collect_env
        python3 -m pytest --junitxml=test-results/junit.xml -v --durations 20
