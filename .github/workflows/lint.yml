name: Lint

on:
  pull_request:
  push:
    branches:
      - nightly
      - main
      - release/*
  workflow_dispatch:

jobs:
  python-source-and-configs:
    uses: pytorch/test-infra/.github/workflows/linux_job.yml@main
    with:
      repository: pytorch/vision
      script: |
        set -euo pipefail

        CONDA_PATH=$(which conda)
        eval "$(${CONDA_PATH} shell.bash hook)"
        conda config --set channel_priority strict
        
        conda create --name ci --quiet --yes python=3.8 pip
        conda activate ci
        
        pip install --progress-bar=off pre-commit
        
        pre-commit run --all-files
        
        # FIXME: show diff on failure
        # git --no-pager diff

  c-source:
    uses: pytorch/test-infra/.github/workflows/linux_job.yml@main
    with:
      repository: pytorch/vision
      script: |
        set -euo pipefail
        
        curl https://oss-clang-format.s3.us-east-2.amazonaws.com/linux64/clang-format-linux64 -o ./clang-format
        chmod +x ./clang-format
        
        # FIXME: debug
        sleep 1800
        
        ./.circleci/unittest/linux/scripts/run-clang-format.py -r torchvision/csrc --clang-format-executable ./clang-format
        
        # FIXME: show diff on failure
        # git --no-pager diff


  python-types:
    uses: pytorch/test-infra/.github/workflows/linux_job.yml@main
    with:
      repository: pytorch/vision
      script: |
        set -euo pipefail
        
        export PYTHON_VERSION=3.8
        export GPU_ARCH_TYPE=cpu
        ./.github/scripts/setup-env.sh
        
        CONDA_PATH=$(which conda)
        eval "$(${CONDA_PATH} shell.bash hook)"
        conda config --set channel_priority strict
        
        pip install --progress-bar=off mypy
        
        mypy --install-types --non-interactive --config-file mypy.ini
