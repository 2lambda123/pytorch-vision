name: Lint

on:
  pull_request:
  push:
    branches:
      - nightly
      - main
      - release/*
  workflow_dispatch:

jobs:
  python-source-and-configs:
    uses: pytorch/test-infra/.github/workflows/linux_job.yml@main
    with:
      repository: pytorch/vision
      script: |
        set -euo pipefail

        echo '::group::Setup environment'
        CONDA_PATH=$(which conda)
        eval "$(${CONDA_PATH} shell.bash hook)"
        conda create --name ci --quiet --yes python=3.8 pip
        conda activate ci
        echo '::endgroup::'
        
        echo '::group::Install lint tools'
        pip install --progress-bar=off pre-commit
        echo '::endgroup::'
        
        echo '::group::Lint Python source and configs'
        set +e
        pre-commit run --all-files
        
        if [ $? -ne 0 ]; then
          git --no-pager diff
          exit 1
        fi
        echo '::endgroup::'

  c-source:
    uses: pytorch/test-infra/.github/workflows/linux_job.yml@main
    with:
      repository: pytorch/vision
      script: |
        set -euo pipefail
        
        echo '::group::Setup environment'
        CONDA_PATH=$(which conda)
        eval "$(${CONDA_PATH} shell.bash hook)"
        # clang-format needs some shared libraries that conflict with the system ones. Thus, we install them from conda
        # and prepend the libraries to linker path to prioritize them. We need to install from conda-forge here, since
        # the libtinfo.so provided by ncurses from the defaults channel doesn't include version information and 
        # clang-format warns about that multiple times per run. Since we are not building or testing torchvision here,
        # this should not be an issue.
        conda create --name ci --quiet --yes python=3.8 ncurses libgcc -c conda-forge
        conda activate ci
        export LD_LIBRARY_PATH="${CONDA_PREFIX}/lib"
        echo '::endgroup::'
        
        echo '::group::Install lint tools'
        curl https://oss-clang-format.s3.us-east-2.amazonaws.com/linux64/clang-format-linux64 -o ./clang-format
        chmod +x ./clang-format
        echo '::endgroup::'

        echo '::group::Lint C source'
        set +e
        ./.circleci/unittest/linux/scripts/run-clang-format.py -r torchvision/csrc --clang-format-executable ./clang-format
        
        if [ $? -ne 0 ]; then
          git --no-pager diff
          exit 1
        fi
        echo '::endgroup::'


  python-types:
    uses: pytorch/test-infra/.github/workflows/linux_job.yml@main
    with:
      repository: pytorch/vision
      script: |
        set -euo pipefail
        
        export PYTHON_VERSION=3.8
        export GPU_ARCH_TYPE=cpu
        ./.github/scripts/setup-env.sh
        
        CONDA_PATH=$(which conda)
        eval "$(${CONDA_PATH} shell.bash hook)"
        conda activate ci
        
        echo '::group::Install lint tools'
        pip install --progress-bar=off mypy
        echo '::endgroup::'
        
        echo '::group::Lint Python types'
        mypy --install-types --non-interactive --config-file mypy.ini
        echo '::endgroup::'