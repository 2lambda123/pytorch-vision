name: Build android

on:
  pull_request:
  push:
    branches:
      - nightly
      - main
      - release/*
  workflow_dispatch:

jobs:
  build:
    uses: pytorch/test-infra/.github/workflows/linux_job.yml@main
    with:
      repository: pytorch/vision
      upload-artifact: android
      script: |
        set -euo pipefail

        VISION_ANDROID="${PWD}/android"
        
        echo '::group::Setup Android SDK'
        yum install -y java-11-openjdk-devel
        echo '::endgroup::'
        
        echo '::group::Setup Android SDK'
        export ANDROID_SDK_ROOT="${PWD}/android-sdk"
        wget --no-verbose https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
        mkdir -p "${ANDROID_SDK_ROOT}/cmdline-tools"
        unzip cmdline-tools.zip -d "${ANDROID_SDK_ROOT}/cmdline-tools"
        mv "${ANDROID_SDK_ROOT}/cmdline-tools/cmdline-tools" "${ANDROID_SDK_ROOT}/cmdline-tools/latest"
        yes | "${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager" --licenses || true
        echo '::endgroup::'
        
        echo '::group::Setup gradle'
        GRADLE_VERSION=6.8.3
        wget --no-verbose "https://downloads.gradle-dn.com/distributions/gradle-${GRADLE_VERSION}-bin.zip" -O gradle.zip
        unzip gradle.zip
        GRADLE="${PWD}/gradle-${GRADLE_VERSION}/bin/gradle"
        echo '::endgroup::'
        
        echo '::group::Build'
        ${GRADLE} --no-daemon -p "${VISION_ANDROID}" assemble
        find "${VISION_ANDROID}" -type f -name "*aar" | xargs tar -cvf "${RUNNER_ARTIFACT_DIR}/aars.tar"
        find "${VISION_ANDROID}" -type f -name "*apk" | xargs tar -cvf "${RUNNER_ARTIFACT_DIR}/apks.tar"
        echo '::endgroup::'
