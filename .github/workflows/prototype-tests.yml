name: tests

on:
  pull_request:

jobs:
  prototype:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        python-version:
          - "3.7"
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
      - name: Set up python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade system packages
        run: python -m pip install --upgrade pip setuptools wheel

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install PyTorch nightly builds
        run: pip install --progress-bar=off --pre torch --extra-index-url https://download.pytorch.org/whl/nightly/cpu/

      - name: debug before cache
        shell: bash
        run: |
          ls -la
          echo '#######################################################################'
          ls -la torchvision
          echo '#######################################################################'
          ls -la build || true

      - name: Restore C source from cache
        uses: actions/cache@v3
        with:
          path: |
            build/**/*
            torchvision/*.so
            torchvision/*.pyd
          key: ${{ matrix.os }}-${{ matrix.python-version }}-${{ hashFiles('setup.py', 'torchvision/csrc/**/*') }}

      - name: debug after cache
        shell: bash
        run: |
          ls -la
          echo '#######################################################################'
          ls -la torchvision
          echo '#######################################################################'
          ls -la build || true

      - name: Install torchvision
        run: pip install --progress-bar=off --no-build-isolation --editable .

      - name: debug after installation
        shell: bash
        run: |
          ls -la
          echo '#######################################################################'
          ls -la torchvision
          echo '#######################################################################'
          ls -la build

      - name: Install other prototype dependencies
        run: pip install --progress-bar=off scipy pycocotools h5py

      - name: Install test requirements
        run: pip install --progress-bar=off pytest pytest-mock pytest-cov

      - name: Mark setup as complete
        id: setup
        run: exit 0

      - name: Run prototype features tests
        shell: bash
        run: |
          pytest \
            --durations=20 \
            --cov=torchvision/prototype/features \
            --cov-report=term-missing \
            test/test_prototype_features*.py

      - name: Run prototype transforms tests
        if: success() || ( failure() && steps.setup.conclusion == 'success' )
        shell: bash
        run: |
          pytest \
            --durations=20 \
            --cov=torchvision/prototype/transforms \
            --cov-report=term-missing \
            test/test_prototype_transforms*.py

      - name: Run prototype models tests
        if: success() || ( failure() && steps.setup.conclusion == 'success' )
        shell: bash
        run: |
          pytest \
            --durations=20 \
            --cov=torchvision/prototype/models \
            --cov-report=term-missing \
            test/test_prototype_models*.py
