name: tests

on:
  pull_request:

jobs:
  prototype:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
      - name: Set up python
        uses: actions/setup-python@v3
        with:
          python-version: 3.7

      - name: Generate cache params
        id: cache-params
        shell: python
        run: |
          import datetime
          import pathlib
          import sys
          
          cache_path = pathlib.Path(sys.executable).parents[1]
          print(cache_path)
          print(f"::set-output name=path::{cache_path}")
          
          today = datetime.datetime.utcnow()
          yesterday = today - datetime.timedelta(1)
          cache_date = f"{today if today.hour > 10 else yesterday:%Y%m%d}"
          print(cache_date)
          print(f"::set-output name=date::{cache_date}")

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.cache-params.outputs.path }}
          key: ${{ runner.os }}-v3-${{ steps.cache-params.outputs.date }}

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install PyTorch nightly builds
        run: pip install --progress-bar=off --pre torch torchdata --extra-index-url https://download.pytorch.org/whl/nightly/cpu/

      - name: Install torchvision
        run: pip install --progress-bar=off --no-build-isolation --editable .

      - name: Install optional dependencies
        run: pip install --progress-bar=off scipy pycocotools h5py iopath

      - name: Install test requirements
        run: pip install --progress-bar=off pytest pytest-mock

#      - name: Run prototype tests
#        shell: bash
#        run: pytest --durations=20 test/test_prototype_*.py
