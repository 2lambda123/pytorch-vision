name: Unit-tests on Linux CPU

on:
  pull_request:
  push:
    branches:
      - nightly
      - main
      - release/*
  workflow_dispatch:

jobs:
  tests:
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
      fail-fast: false
    uses: pytorch/test-infra/.github/workflows/linux_job.yml@main
    with:
      runner: linux.12xlarge
      repository: pytorch/vision
      script: |
        echo '::group::Set PyTorch conda channel'
        # TODO: Can we maybe have this as environment variable in the job template? For example, `IS_RELEASE`.
        if [[ (${GITHUB_EVENT_NAME} = 'pull_request' && (${GITHUB_BASE_REF} = 'release'*)) || (${GITHUB_REF} = 'refs/heads/release'*) ]]; then
          POSTFIX=test
        else
          POSTFIX=nightly
        fi
        PYTORCH_CHANNEL=pytorch-"${POSTFIX}"
        echo "${PYTORCH_CHANNEL}"
        echo '::endgroup::'

        echo '::group::Set PyTorch conda mutex'
        PYTORCH_MUTEX=cpuonly
        echo "${PYTORCH_MUTEX}"
        echo '::endgroup::'

        echo '::group::Create conda environment'
        conda create \
          --name ci \
          --quiet --yes \
          python=${{ matrix.python-version }} pip \
          setuptools ninja \
          libpng jpeg
        conda activate ci
        pip install 'av<10'
        echo '::endgroup::'

        echo '::group::Install PyTorch'
        conda install \
          --quiet --yes \
          -c "${PYTORCH_CHANNEL}" \
          -c nvidia \
          pytorch \
          "${PYTORCH_MUTEX}"
        echo '::endgroup::'
        
        python -c "import certifi; print(certifi.where())"
        python -c "import pip._vendor.certifi as certifi; print(certifi.where())"
        echo PIP_CERT=$PIP_CERT

        echo '::group::Install TorchVision'
        # The `setuptools` package installed through `conda` includes a patch that errors if something is installed 
        # through `setuptools` while the `CONDA_BUILD` environment variable is set.
        # https://github.com/AnacondaRecipes/setuptools-feedstock/blob/f5d8d256810ce28fc0cf34170bc34e06d3754041/recipe/patches/0002-disable-downloads-inside-conda-build.patch
        # (Although we are not using the `-c conda-forge` channel, the patch is equivalent but not public for 
        # `setuptools` from the `-c defaults` channel
        unset CONDA_BUILD
        python setup.py develop
        echo '::endgroup::'

        echo '::group::Collect PyTorch environment information'
        python -m torch.utils.collect_env
        echo '::endgroup::'

        echo '::group::Install testing utilities'
        pip install --progress-bar=off pytest pytest-mock pytest-cov
        echo '::endgroup::'

        echo '::group::Run tests'
        pytest --durations=25
        echo '::endgroup::'
