
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_repurposing_annotations.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_repurposing_annotations.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_repurposing_annotations.py:


=======================
Repurposing annotations
=======================

The following example illustrates the operations available in the torchvision.ops module for repurposing object
localization annotations for different tasks (e.g. transforming masks used by instance and panoptic segmentation
methods into bounding boxes used by object detection methods).

.. GENERATED FROM PYTHON SOURCE LINES 10-23

.. code-block:: default

    import os.path

    import PIL.Image
    import matplotlib.patches
    import matplotlib.pyplot
    import numpy
    import torch
    from torchvision.ops import masks_to_boxes

    ASSETS_DIRECTORY = "../test/assets"

    matplotlib.pyplot.rcParams["savefig.bbox"] = "tight"








.. GENERATED FROM PYTHON SOURCE LINES 24-44

Masks
-----
In tasks like instance and panoptic segmentation, masks are commonly defined, and are defined by this package,
as a multi-dimensional array (e.g. a NumPy array or a PyTorch tensor) with the following shape:

      (objects, height, width)

Where objects is the number of annotated objects in the image. Each (height, width) object corresponds to exactly
one object. For example, if your input image has the dimensions 224 x 224 and has four annotated objects the shape
of your masks annotation has the following shape:

      (4, 224, 224).

A nice property of masks is that they can be easily repurposed to be used in methods to solve a variety of object
localization tasks.

Masks to bounding boxes
----------------------------------------
For example, the masks to bounding_boxes operation can be used to transform masks into bounding boxes that can be
used in methods like Faster RCNN and YOLO.

.. GENERATED FROM PYTHON SOURCE LINES 44-76

.. code-block:: default


    with PIL.Image.open(os.path.join(ASSETS_DIRECTORY, "masks.tiff")) as image:
        masks = torch.zeros((image.n_frames, image.height, image.width), dtype=torch.int)

        for index in range(image.n_frames):
            image.seek(index)

            frame = numpy.array(image)

            masks[index] = torch.tensor(frame)

    bounding_boxes = masks_to_boxes(masks)

    figure = matplotlib.pyplot.figure()

    a = figure.add_subplot(121)
    b = figure.add_subplot(122)

    labeled_image = torch.sum(masks, 0)

    a.imshow(labeled_image)
    b.imshow(labeled_image)

    for bounding_box in bounding_boxes:
        x0, y0, x1, y1 = bounding_box

        rectangle = matplotlib.patches.Rectangle((x0, y0), x1 - x0, y1 - y0, linewidth=1, edgecolor="r", facecolor="none")

        b.add_patch(rectangle)

    a.set(xticklabels=[], yticklabels=[], xticks=[], yticks=[])
    b.set(xticklabels=[], yticklabels=[], xticks=[], yticks=[])



.. image-sg:: /auto_examples/images/sphx_glr_plot_repurposing_annotations_001.png
   :alt: plot repurposing annotations
   :srcset: /auto_examples/images/sphx_glr_plot_repurposing_annotations_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [[Text(-50.0, 0, ''), Text(0.0, 0, ''), Text(50.0, 0, ''), Text(100.0, 0, ''), Text(150.0, 0, ''), Text(200.0, 0, ''), Text(250.0, 0, '')], [Text(0, -25.0, ''), Text(0, 0.0, ''), Text(0, 25.0, ''), Text(0, 50.0, ''), Text(0, 75.0, ''), Text(0, 100.0, ''), Text(0, 125.0, ''), Text(0, 150.0, ''), Text(0, 175.0, ''), Text(0, 200.0, ''), Text(0, 225.0, '')], [], []]




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.167 seconds)


.. _sphx_glr_download_auto_examples_plot_repurposing_annotations.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_repurposing_annotations.py <plot_repurposing_annotations.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_repurposing_annotations.ipynb <plot_repurposing_annotations.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
